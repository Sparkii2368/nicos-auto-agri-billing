<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Nico’s Auto & Agri — Billing</title>
<link rel="preconnect" href="https://cdn.jsdelivr.net" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sanitize.css" />
<style>
:root{
  --brand:#0f7b6c; --accent:#eefaf7; --ink:#1f2937; --muted:#6b7280; --bg:#f9fafb; --line:#e5e7eb;
}
body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Helvetica,Arial,sans-serif;background:var(--bg);color:var(--ink);padding:12px;max-width:980px;margin:auto;}
nav{display:flex;gap:8px;margin-bottom:12px}
nav button{padding:10px 14px;border:1px solid var(--brand);border-radius:10px;background:#fff;color:var(--brand);font-weight:700;cursor:pointer}
nav button.active{background:var(--brand);color:#fff}
.sheet{background:#fff;border:1px solid var(--line);border-radius:12px;padding:16px;box-shadow:0 6px 20px rgba(0,0,0,.04);}

/* Focus visibility */
button:focus-visible, input:focus-visible, select:focus-visible, textarea:focus-visible {
  outline: 3px solid rgba(15,123,108,.35);
  outline-offset: 2px;
}

.sheet > header{display:flex;gap:16px;align-items:center;border-bottom:2px solid var(--line);padding-bottom:12px;margin-bottom:16px;}
#logo{width:180px;height:auto;display:block;object-fit:contain}
.brand-block h1{margin:0 0 6px 0;font-size:22px;letter-spacing:.2px;color:var(--brand)}
.brand-sub{margin:0;font-size:13px;color:var(--muted);line-height:1.4}
.company-details{margin:6px 0 0 0;font-size:13px;color:var(--muted);line-height:1.4}
@media (max-width:640px){.sheet > header{flex-direction:column;text-align:center}#logo{margin:0 auto;width:160px}}

.card{background:white;border:1px solid var(--line);border-radius:10px;padding:14px;margin:10px 0}
.row{display:grid;grid-template-columns:repeat(12,1fr);gap:8px}
.col-6{grid-column:span 6}.col-4{grid-column:span 4}.col-3{grid-column:span 3}.col-2{grid-column:span 2}.col-12{grid-column:span 12}
@media (max-width:720px){.col-6,.col-4,.col-3,.col-2{grid-column:span 12}}
label{font-size:.82rem;color:var(--muted);display:block;margin-bottom:4px}
input,select,textarea{width:100%;padding:10px;border:1px solid var(--line);border-radius:8px;font-size:.95rem;background:#fff}
textarea{min-height:70px;resize:vertical}
table{width:100%;border-collapse:collapse}
th,td{padding:10px;border-bottom:1px solid #eee;font-size:.95rem}
th{text-align:left;color:var(--muted);font-weight:600}
tfoot td{border-top:2px solid #eee;font-weight:600}
.btn{background:var(--brand);color:#fff;border:none;border-radius:10px;padding:12px 16px;font-weight:700;cursor:pointer}
.btn.outline{background:#fff;color:var(--brand);border:2px solid var(--brand)}
.actions{display:flex;gap:8px;flex-wrap:wrap;margin-top:10px}
.right{text-align:right}
.muted{color:var(--muted)}
.pill{display:inline-block;background:var(--accent);color:var(--brand);padding:2px 8px;border-radius:999px;font-size:.8rem;margin-left:6px}
.hidden{display:none}
.table-actions button{padding:6px 10px;border-radius:8px;border:1px solid var(--line);background:#fff;cursor:pointer}
.search { display: flex; gap: 8px; align-items: center; margin-bottom: 8px; flex-wrap: wrap; }
.markup-col { max-width: 90px; }

/* Mobile layout tweaks */
@media (max-width: 480px) {
  #itemsTbl thead { display: none; }
  #itemsTbl, #itemsTbl tbody, #itemsTbl tr, #itemsTbl td {
    display: block; width: 100%;
  }
  #itemsTbl tr { margin-bottom: 1rem; border-bottom: 1px solid var(--line); }
  #itemsTbl td { position: relative; padding: 8px 12px; text-align: left; margin-bottom: 10px; }
  #itemsTbl td::before {
    content: attr(data-label);
    display: block;
    font-weight: 600;
    color: var(--muted);
    margin-bottom: 4px;
  }
  .actions button {
    flex: 1 1 100% !important;
    margin: 6px 0 !important;
  }
  nav {
    position: fixed; bottom: 0; left: 0; right: 0;
    background: #fff; z-index: 9;
    box-shadow: 0 -2px 6px rgba(0,0,0,0.06);
    padding: 8px;
  }
  .sheet { padding-bottom: 70px; }
  #itemsTbl input.qty, #itemsTbl input.price, #itemsTbl input.markup {
    max-width: 140px;
  }
  .btn, .btn.outline { padding: 14px 18px; }
  #itemsTbl td[data-label="Actions"] .btn {
    padding: 10px 14px; font-size: 1.1rem;
  }
}
</style>
</head>
<body>

<!-- Header and form structure -->
<div class="sheet">
  <header>
    <img id="logo" src="logo.png" alt="Company Logo" />
    <div class="brand-block">
      <h1>Nico’s Auto & Agri</h1>
      <p class="brand-sub">Repair • Service • Sales</p>
      <p class="company-details">123 Main Street, Townsville<br/>Tel: 012 345 6789</p>
    </div>
  </header>

  <!-- Invoice form -->
  <form id="invoiceForm">
    <!-- Form content: client, items, totals -->
    <!-- ... replicate your existing HTML form/table here -->
  </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/luxon@3/build/global/luxon.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jspdf@2.5.1/dist/jspdf.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jspdf-autotable@3.8.3/dist/jspdf.plugin.autotable.min.js"></script>
<script>
const $ = sel => document.querySelector(sel);
const fmt = (v,c) => {
  const sym = c==='USD'?'$':c==='EUR'?'€':'R';
  return `${sym} ${Number(v||0).toLocaleString(undefined,{minimumFractionDigits:2,maximumFractionDigits:2})}`;
};
const numberConfig = {
  QUOTE: { prefix: 'QUO', counterKey: 'counter_QUOTE' },
  PRO_FORMA: { prefix: 'PFI', counterKey: 'counter_PRO_FORMA' },
  TAX_INVOICE: { prefix: 'NAA', counterKey: 'counter_TAX_INVOICE' }
};
const storage = { docsKey:'docs', clientsKey:'clients', cfgKey:'cfg' };

function readForm(){
  // build inv object from form inputs
  return {
    type: $('#docType').value,
    invNumber: $('#invNumber').value,
    bizEmail: $('#bizEmail').value,
    currency: $('#currency').value,
    items: gatherItems()
  };
}
function gatherItems(){
  // parse DOM table rows into item objects
  return [];
}
function saveDoc(inv){
  let list = JSON.parse(localStorage.getItem(storage.docsKey) || '[]');
  list.push(inv);
  localStorage.setItem(storage.docsKey, JSON.stringify(list));
}
function nextNumber(cfg){
  const count = parseInt(localStorage.getItem(cfg.counterKey) ||
  0) || 0;
  return `${cfg.prefix}-${String(count + 1).padStart(3, '0')}`;
}

function labelForType(type) {
  switch(type) {
    case 'QUOTE': return 'Quote';
    case 'PRO_FORMA': return 'Pro Forma Invoice';
    case 'TAX_INVOICE': return 'Tax Invoice';
    default: return 'Document';
  }
}

/* === Main Save + PDF Generation === */
function onSaveClick() {
  const inv = readForm();
  const cfg = numberConfig[inv.type];

  // Assign number if empty
  if (!inv.invNumber) {
    inv.invNumber = nextNumber(cfg);
    $('#invNumber').value = inv.invNumber;
  }

  // Confirm overwrite
  let list = [];
  try { list = JSON.parse(localStorage.getItem(storage.docsKey) || '[]'); }
  catch { list = []; }

  const existingIdx = list.findIndex(
    x => x.invNumber === inv.invNumber && x.type === inv.type
  );

  if (existingIdx >= 0) {
    const ok = confirm(`${labelForType(inv.type)} ${inv.invNumber} exists. Overwrite?`);
    if (!ok) return;
  }

  // Save the doc
  saveDoc(inv);

  // Keep counters in sync
  try {
    if (!cfg.counters) cfg.counters = {};
    if (!cfg.counters[inv.type]) cfg.counters[inv.type] = 0;
    cfg.counters[inv.type]++;

    // Persist updated cfg
    localStorage.setItem(storage.cfgKey, JSON.stringify(cfg));

    // Optional UI update
    const nextNum = nextNumber(cfg);
    const elNext = document.querySelector('#nextNumber');
    if (elNext) elNext.textContent = nextNum;
  } catch (err) {
    console.error('Error updating counters:', err);
  }

  // === Build PDF ===
  const M = 40;
  const W = 595.28;
  const INK = [17, 24, 39];
  const MUTED = [107, 114, 128];
  let y = 60;

  const doc = new jsPDF();

  // Heading
  doc.setFontSize(12).setFont('helvetica', 'bold');
  doc.text(`${labelForType(inv.type)} ${inv.invNumber}`, M, y);
  y += 20;

  // Table(s) from real data
  const tableBody = inv.items && inv.items.length
    ? inv.items.map(it => [
        it.d || '',
        it.q || '',
        fmt(it.p || 0, inv.currency)
      ])
    : [['—', '—', '—']];

  doc.autoTable({
    head: [['Description', 'Qty', 'Price']],
    body: tableBody,
    startY: y,
    styles: { fontSize: 10 }
  });

  const lastTableY = (doc.lastAutoTable && doc.lastAutoTable.finalY) || y;
  y = lastTableY;

  // Banking details (static)
  (function renderBankingDetails() {
    const pageH = doc.internal.pageSize.getHeight();
    let bankY = Math.max(y + 60, lastTableY + 40, 120);
    if (bankY > pageH - 140) {
      doc.addPage();
      bankY = 120;
    }

    // Separator line
    doc.setDrawColor(229, 231, 235).setLineWidth(0.7);
    doc.line(M, bankY - 10, W - M, bankY - 10);

    // Heading
    doc.setFont('helvetica', 'bold').setFontSize(11).setTextColor(...INK);
    doc.text('Banking details', M, bankY);

    // Static details
    doc.setFont('helvetica', 'normal').setFontSize(10).setTextColor(...MUTED);
    doc.text([
      'Name: IC Schutte',
      'Bank: Capitec saving',
      'Account number: 1680306187',
      'Branch code: 470010'
    ], M, bankY + 14);
  })();

  // Footer
  doc.setFontSize(9).setTextColor(107, 114, 128);
  if (inv.bizEmail) {
    doc.text(inv.bizEmail, M, doc.internal.pageSize.getHeight() - 20);
  }

  // Save PDF
  const title = labelForType(inv.type) || 'Invoice';
  const filename = (inv.invNumber || title.replace(/\s+/g, '_')) + '.pdf';
  doc.save(filename);
}

// Bind save button
document.querySelector('#saveBtn').addEventListener('click', onSaveClick);
</script>
</body>
</html>
